name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Download DuckDB file (if URL provided)
        if: env.DUCKDB_DOWNLOAD_URL != ''
        run: |
          mkdir -p out_recon
          echo "Downloading DuckDB from: $DUCKDB_DOWNLOAD_URL"
          curl -L "$DUCKDB_DOWNLOAD_URL" -o out_recon/sku_master_v2.duckdb
          echo "DuckDB file size: $(du -h out_recon/sku_master_v2.duckdb)"
        env:
          DUCKDB_DOWNLOAD_URL: ${{ secrets.DUCKDB_DOWNLOAD_URL }}
      
      - name: Type check
        run: npx tsc --noEmit --skipLibCheck
      
      - name: Lint check
        run: npm run lint
      
      - name: Build project
        run: npm run build
        env:
          NEXT_PUBLIC_MODE: B
          DUCKDB_PATH: out_recon/sku_master_v2.duckdb
          DEFAULT_TOLERANCE_PCT: 10
      
      - name: Test build artifacts
        run: |
          echo "Checking build artifacts..."
          ls -la .next/
          echo "Build completed successfully"
      
      - name: Upload build artifacts
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            out_recon/
          retention-days: 7

  deploy-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: .
      
      - name: Deploy to Vercel Preview
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod=false'

  deploy-production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          lfs: true
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: .
      
      - name: Deploy to Vercel Production
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod=true'
      
      - name: Notify deployment success
        run: |
          echo "ðŸš€ Production deployment completed successfully!"
          echo "Environment: Production"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
